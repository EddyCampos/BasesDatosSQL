-- INSTITUTO NACIONAL DE APRENDIZAJE
-- PROGRAMADOR DE APLICACIONES
-- MÓDULO: GESTIÓN DE BASES DE DATOS
-- PROFESOR: LUIS CHACÓN ZUÑIGA
-- ESTUDIANTE: EDDY CAMPOS JIMÉNEZ
-- PROYECTO BASE DE DATOS MATRICULA
-- FECHA CREACIÓN: 1 FEB 2023
-- ULTIMA ACTUALIZACION: 19 FEB 2023
----------------------------------------------------------------------------------------
--CREA Y USA LA BASE DE DATOS
CREATE DATABASE EDDY_PROYECTOBD_FASE2
GO
USE EDDY_PROYECTOBD_FASE2
GO
----------------------------------------------------------------------------------------
--CREA LA TABLA ESTUDIANTES
CREATE TABLE ESTUDIANTES(
	ID_ESTUDIANTE varchar(10) PRIMARY KEY,
	CARNET varchar(10) NOT NULL UNIQUE,
	NOMBRE varchar(20) NOT NULL,
	APELLIDO_01 varchar(20) NOT NULL,
	APELLIDO_02 varchar(20) NOT NULL,
	NUM_CEDULA varchar(20) NOT NULL,
	F_NACIMIENTO date NOT NULL,
	PAIS varchar(20) NOT NULL DEFAULT 'COSTA RICA',
	PROVINCIA varchar(20) NOT NULL DEFAULT 'ALAJUELA',
	CANTON varchar(20) NOT NULL,
	DISTRITO varchar(20) NOT NULL,
	DIRECCION_EXACTA varchar(200) NOT NULL,
	ESTADO_CIVIL varchar(20) DEFAULT 'SOLTERO',
	NUM_TELEFONO varchar(10) NOT NULL,
	EMAIL varchar(40) NOT NULL,
	F_INGRESO date NOT NULL,
	ESTADO varchar(3) NOT NULL DEFAULT 'ACT',
	BORRADO_E bit NOT NULL DEFAULT 0
)


--RESTRICCIONES TABLA ESTUDIANTES
--CHECK FECHA NACIMIENTO MENOR A LA FECHA ACTUAL
ALTER TABLE ESTUDIANTES	ADD CONSTRAINT CHK_F_NACIMIENTO_E
	CHECK (F_NACIMIENTO < GETDATE())

--CHECK PROVINCIA IGUAL A SAN JOSE, ALAJUELA, CARTAGO...
ALTER TABLE ESTUDIANTES ADD CONSTRAINT CHK_PROVINCIA_E
	CHECK (PROVINCIA LIKE 'SAN JOSE' or PROVINCIA LIKE 'ALAJUELA' or PROVINCIA LIKE 'CARTAGO' or PROVINCIA LIKE 'HEREDIA' or PROVINCIA LIKE 'PUNTARENAS' or PROVINCIA LIKE 'LIMON' or PROVINCIA LIKE 'GUANACASTE')

--CHECK ESTADO CIVIL IGUAL A SOLTERO, CASADO, DIVORCIADO O VIUDO
ALTER TABLE ESTUDIANTES ADD CONSTRAINT CHK_ESTADO_CIVIL_E
	CHECK (ESTADO_CIVIL LIKE 'SOLTERO' or ESTADO_CIVIL LIKE 'CASADO' or ESTADO_CIVIL LIKE 'DIVORCIADO' or ESTADO_CIVIL LIKE 'VIUDO')

--CHECK ESTADO IGUAL A ACT O INA
ALTER TABLE ESTUDIANTES ADD CONSTRAINT CHK_ESTADO_E
	CHECK (ESTADO LIKE 'ACT' or ESTADO LIKE 'INA')

-------------------------------------------------------------------------------------------
--CREA LA TABLA EMPLEADOS
CREATE TABLE EMPLEADOS(
	ID_EMPLEADO varchar(10) PRIMARY KEY,
	CARNET varchar(10) NOT NULL UNIQUE,
	NOMBRE varchar(20) NOT NULL,
	APELLIDO_01 varchar(20) NOT NULL,
	APELLIDO_02 varchar(20) NOT NULL,
	NUM_CEDULA varchar(20) NOT NULL,
	F_NACIMIENTO date NOT NULL,
	PAIS varchar(20) NOT NULL DEFAULT 'COSTA RICA',
	PROVINCIA varchar(20) NOT NULL DEFAULT 'ALAJUELA',
	CANTON varchar(20) NOT NULL,
	DISTRITO varchar(20) NOT NULL,
	DIRECCION_EXACTA varchar(200) NOT NULL,
	ESTADO_CIVIL varchar(20) NOT NULL DEFAULT 'SOLTERO',
	NUM_TELEFONO varchar(10) NOT NULL,
	EMAIL varchar(40) NOT NULL,
	ESTADO varchar(3) NOT NULL DEFAULT 'ACT',
	BORRADO_EM bit NOT NULL DEFAULT 0
)

--RESTRICCIONES TABLA EMPLEADOS
--CHECK FECHA NACIMIENTO MENOR A LA FECHA ACTUAL
ALTER TABLE EMPLEADOS ADD CONSTRAINT CHK_F_NACIMIENTO_EMP
	CHECK (F_NACIMIENTO < GETDATE())

--CHECK PROVINCIA IGUAL A SAN JOSE, ALAJUELA, CARTAGO...
ALTER TABLE EMPLEADOS ADD CONSTRAINT CHK_PROVINCIA_EMP
	CHECK (PROVINCIA LIKE 'SAN JOSE' or PROVINCIA LIKE 'ALAJUELA' or PROVINCIA LIKE 'CARTAGO' or PROVINCIA LIKE 'HEREDIA' or PROVINCIA LIKE 'PUNTARENAS' or PROVINCIA LIKE 'LIMON' or PROVINCIA LIKE 'GUANACASTE')

--CHECK ESTADO CIVIL IGUAL A SOLTERO, CASADO, DIVORCIADO O VIUDO
ALTER TABLE EMPLEADOS ADD CONSTRAINT CHK_ESTADO_CIVIL_EMP
	CHECK (ESTADO_CIVIL LIKE 'SOLTERO' or ESTADO_CIVIL LIKE 'CASADO' or ESTADO_CIVIL LIKE 'DIVORCIADO' or ESTADO_CIVIL LIKE 'VIUDO')

--CHECK ESTADO IGUAL A ACT O INA
ALTER TABLE EMPLEADOS ADD CONSTRAINT CHK_ESTADO_EMP
	CHECK (ESTADO LIKE 'ACT' or ESTADO LIKE 'INA')
---------------------------------------------------------------------------------------------
--CREA LA TABLA PROFESORES
CREATE TABLE PROFESORES(
	ID_PROFESOR varchar(15) PRIMARY KEY,
	ID_EMPLEADO varchar(10) NOT NULL,
	GRADO varchar(30) NOT NULL DEFAULT 'LICENCIATURA',
	NOMBRE_INSTITUCION varchar(30) NOT NULL,
	DETALLES varchar(200),
	BORRADO_P bit NOT NULL DEFAULT 0,
	ESTADO varchar(3)
)

--RESTRICCIONES TABLA PROFESORES
--CHECK GRADO IGUAL A LICENCIATURA, BACHILLERATO, DIPLOMADO O MAESTRIA
ALTER TABLE PROFESORES ADD CONSTRAINT CHK_GRADO_PROF
	CHECK (GRADO LIKE 'LICENCIATURA' or GRADO LIKE 'BACHILLERATO' or GRADO LIKE 'DIPLOMADO' or GRADO LIKE 'MAESTRÍA')

---------------------------------------------------------------------------------------------
--CREA LA TABLA CERTIFICACIONES
CREATE TABLE CERTIFICACIONES(
	ID_CERTIFICADO varchar(15) PRIMARY KEY,
	NOMBRE_CERTIFICADO varchar(30) NOT NULL,
	NUM_FOLIO varchar(10) NOT NULL,
	FECHA_EXPEDICION date NOT NULL
)

--RESTRICCIONES TABLA CERTIFICACIONES
--CHECK FECHA EXPEDICION MENOR A LA FECHA ACTUAL
ALTER TABLE CERTIFICACIONES ADD CONSTRAINT CHK_F_EXPEDICION
	CHECK (FECHA_EXPEDICION < GETDATE())

---------------------------------------------------------------------------------------------
--CREA LA TABLA PROFESORES_CERTIFICADOS
CREATE TABLE PROFESORES_CERTIFICADOS(
	ID_PROFESOR_CERTIFICADO varchar(10) PRIMARY KEY,
	ID_PROFESOR varchar(15) NOT NULL,
	ID_CERTIFICADO varchar(15) NOT NULL
)

---------------------------------------------------------------------------------------------
--CREA LA TABLA MATRICULAS
CREATE TABLE MATRICULAS(
	ID_COMPROBANTE varchar(10) PRIMARY KEY,
	ID_ESTUDIANTE varchar(10) NOT NULL,
	ID_MATERIA_ABIERTA varchar(10) NOT NULL,
	NOTAPONDERADA decimal(10,2) NOT NULL,
	DESCUENTO decimal(10,2) NOT NULL,
	DETALLES varchar(200),
	ESTADO varchar(3)
)

--RESTRICCIONES TABLA MATRICULAS
--CHECK DESCUENTO MAYOR O IGUAL A 0 Y MENOR O IGUAL A 5
ALTER TABLE MATRICULAS ADD CONSTRAINT CHK_DESCUENTO
	CHECK (DESCUENTO >= 0 or DESCUENTO <= 5)

---------------------------------------------------------------------------------------------
--CREA LA TABLA REGISTRO_NOTAS
CREATE TABLE REGISTRO_NOTAS(
	ID_REGISTRO varchar(10) PRIMARY KEY,
	ID_COMPROBANTE varchar(10) NOT NULL,
	ID_MATERIA varchar(10) NOT NULL,
	CALIFICACION decimal(10,2) NOT NULL,
	PROMEDIO decimal(10,2) NOT NULL,
	ESTADO varchar(3) NOT NULL
)

---------------------------------------------------------------------------------------------
--CREA LA TABLA FACTURAS
CREATE TABLE FACTURAS(
	ID_FACTURA varchar(10) PRIMARY KEY,
	ID_COMPROBANTE varchar(10) NOT NULL,
	MONTOTOTAL decimal(10,2) NOT NULL,
	DETALLES varchar(200),
	ESTADO varchar(3)
)
---------------------------------------------------------------------------------------------
--CREA LA TABLA MATERIAS_DISPONIBLES
CREATE TABLE MATERIAS_DISPONIBLES(
	ID_MATERIA_ABIERTA varchar(10) PRIMARY KEY,
	ID_MATERIA varchar(10) NOT NULL,
)
---------------------------------------------------------------------------------------------
--CREA LA TABLA MATERIAS
CREATE TABLE MATERIAS(
	ID_MATERIA varchar(10) PRIMARY KEY,
	ID_CARRERA varchar(10) NOT NULL,
	ID_PROFESOR_CERTIFICADO varchar(10) NOT NULL,
	NOMBRE varchar(60) NOT NULL,
	HORAS int NOT NULL,
	COSTO decimal(10,2) NOT NULL,
	CREDITOS smallint NOT NULL DEFAULT 3,
	REQUISITOS varchar(10) NOT NULL,
	DETALLES varchar(200),
	ESTADO varchar(3) NOT NULL DEFAULT 'CER',
	BORRADO_M bit NOT NULL DEFAULT 0
)

--RESTRICCIONES TABLA MATERIAS
--CHECK HORAS MAYORES O IGUALES A 60
ALTER TABLE MATERIAS ADD CONSTRAINT CHK_HORAS_MA
	CHECK (HORAS >= 60)

--CHECK CREDITOS ENTRE O Y 10
ALTER TABLE MATERIAS ADD CONSTRAINT CHK_CREDITOS_MA
	CHECK (CREDITOS > 0 AND CREDITOS < 10)

--CHECK ESTADO IGUAL A ABI O CER
ALTER TABLE MATERIAS ADD CONSTRAINT CHK_ESTADO_MA
	CHECK (ESTADO LIKE 'ABI' or ESTADO LIKE 'CER')

---------------------------------------------------------------------------------------------
--CREA LA TABLA CARRERAS
CREATE TABLE CARRERAS(
	ID_CARRERA varchar(10) PRIMARY KEY,
	NOMBRE varchar(60) NOT NULL,
	GRADO varchar(30) NOT NULL DEFAULT 'LICENCIATURA',
	DESCRIPCION varchar(200) NOT NULL,
	TOTAL_CREDITOS smallint NOT NULL DEFAULT 10,
	BORRADO_C bit NOT NULL DEFAULT 0
)

--RESTRICCIONES TABLA CARRERAS
--CHECK GRADO IGUAL A LICENCIATURA, BACHILLERATO, DIPLOMADO O MAESTRIA
ALTER TABLE CARRERAS ADD CONSTRAINT CHK_GRADO_CAR
	CHECK (GRADO LIKE 'LICENCIATURA' or GRADO LIKE 'BACHILLERATO' or GRADO LIKE 'DIPLOMADO' or GRADO LIKE 'MAESTRÍA')

---------------------------------------------------------------------------------------------
--CREA LA TABLA GRUPOS
CREATE TABLE GRUPOS(
	ID_GRUPO varchar(10) PRIMARY KEY,
	ID_MATERIA_ABIERTA varchar(10)  NOT NULL,
	ID_LABORATORIO varchar(10) NOT NULL,
	CUPO smallint NOT NULL DEFAULT 15
)

--RESTRICCIONES TABLA GRUPOS
--CHECK CUPO MAYOR A 10
ALTER TABLE GRUPOS ADD CONSTRAINT CHK_CUPO_GR
	CHECK (CUPO > 10)
---------------------------------------------------------------------------------------------
--CREA LA TABLA LABORATORIOS
CREATE TABLE LABORATORIOS(
	ID_LABORATORIO varchar(10) PRIMARY KEY,
	PABELLON smallint NOT NULL,
	CANTIDAD_LAPTOPS smallint,
	CANTIDAD_SILLAS smallint,
	CANTIDAD_ESCRITORIOS smallint
)

--RESTRICCIONES TABLA LABORATORIOS
--CHECK NUMERO DE PABELLON MAYOR A 0 Y MENOR A 6
ALTER TABLE LABORATORIOS ADD CONSTRAINT CHK_PABELLON_L
	CHECK (PABELLON > 0 AND PABELLON < 6)

---------------------------------------------------------------------------------------------
--CREA LA TABLA HORARIOS
CREATE TABLE HORARIOS(
	ID_GRUPO varchar(10) NOT NULL,
	DIA varchar(1) NOT NULL DEFAULT 'L',
	HORAINICIO time NOT NULL,
	HORAFIN time NOT NULL,
	F_INICIO date NOT NULL
)

--RESTRICCIONES TABLA HORARIOS
--CHECK DIA IGUAL A L, K, M, J O V
ALTER TABLE HORARIOS ADD CONSTRAINT CHK_DIA_H
	CHECK (DIA = 'L' or DIA = 'K' or DIA = 'M' or DIA = 'J' or DIA = 'V')

--CHECK HORA INICIO DE CLASE IGUAL O MAYOR A LAS 7AM
ALTER TABLE HORARIOS ADD CONSTRAINT CHK_HORAINICIO_H
	CHECK (HORAINICIO >= '7:00')

--CHECK HORA FIN DE CLASE MENOR O IGUAL A LAS 6PM
ALTER TABLE HORARIOS ADD CONSTRAINT CHK_HORAFIN_H
	CHECK (HORAFIN <= '18:00')
---------------------------------------------------------------------------------------------
--CREA LA TABLA FERIADOS
CREATE TABLE FERIADOS(
	ID_FERIADO int IDENTITY(1, 1) PRIMARY KEY,
	ID_GRUPO varchar(10) NOT NULL,
	FECHA date NOT NULL,
	APLICA int
)
----------------------------------------------------------------------------------------
--RELACIONES

-- DE CARRERAS A MATERIAS
ALTER TABLE MATERIAS ADD CONSTRAINT FK_ID_CARRERA_MATE
	FOREIGN KEY(ID_CARRERA) REFERENCES CARRERAS(ID_CARRERA)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

-- DE MATERIAS A MATERIAS DISPONIBLES
ALTER TABLE MATERIAS_DISPONIBLES ADD CONSTRAINT FK_ID_MATERIA_MD
	 FOREIGN KEY(ID_MATERIA) REFERENCES MATERIAS(ID_MATERIA)
	 ON DELETE NO ACTION
	 ON UPDATE NO ACTION

--DE GRIPOS A FERIADOS
ALTER TABLE FERIADOS ADD CONSTRAINT FK_ID_GRUPOS_F
	FOREIGN KEY(ID_GRUPO) REFERENCES GRUPOS(ID_GRUPO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE GRUPOS A HORARIOS
ALTER TABLE HORARIOS ADD CONSTRAINT FK_ID_GRUPO_H
	FOREIGN KEY(ID_GRUPO) REFERENCES GRUPOS(ID_GRUPO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE LABORATORIOS A GRUPOS
ALTER TABLE GRUPOS ADD CONSTRAINT FK_ID_LABORATORIO_G
	FOREIGN KEY(ID_LABORATORIO) REFERENCES LABORATORIOS(ID_LABORATORIO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE MATERIAS DISPONIBLES A GRUPOS
ALTER TABLE GRUPOS ADD CONSTRAINT FK_ID_MATERIA_ABIERTA_G
	FOREIGN KEY(ID_MATERIA_ABIERTA) REFERENCES MATERIAS_DISPONIBLES(ID_MATERIA_ABIERTA)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE PROFESORES A PROFESORES CERTIFICADOS
ALTER TABLE PROFESORES_CERTIFICADOS ADD CONSTRAINT FK_ID_PROFESOR_PC
	FOREIGN KEY(ID_PROFESOR) REFERENCES PROFESORES(ID_PROFESOR)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE CERTIFICACIONES A PROFESORES CERTIFICADOS
ALTER TABLE PROFESORES_CERTIFICADOS ADD CONSTRAINT FK_ID_CERTIFICADO_PC
	FOREIGN KEY(ID_CERTIFICADO) REFERENCES CERTIFICACIONES(ID_CERTIFICADO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE PROFESORES CERTIFICADOS A MATERIAS
ALTER TABLE MATERIAS ADD CONSTRAINT FK_ID_PROFESOR_CERTIFICADO_M
	FOREIGN KEY(ID_PROFESOR_CERTIFICADO) REFERENCES PROFESORES_CERTIFICADOS(ID_PROFESOR_CERTIFICADO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE EMPLEADOS A PROFESORES
ALTER TABLE PROFESORES ADD CONSTRAINT FK_ID_EMPLEADO_P
	FOREIGN KEY(ID_EMPLEADO) REFERENCES EMPLEADOS(ID_EMPLEADO)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE ESTUDIANTES A MATRICULAS
ALTER TABLE MATRICULAS ADD CONSTRAINT FK_ID_ESTUDIANTE_MATRI
	FOREIGN KEY(ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID_ESTUDIANTE)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE MATRICULAS A FACTURAS
ALTER TABLE FACTURAS ADD CONSTRAINT FK_ID_COMPROBANTE_F
	FOREIGN KEY(ID_COMPROBANTE) REFERENCES MATRICULAS(ID_COMPROBANTE)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE MATERIAS _DISPONIBLES A MATRICULAS
ALTER TABLE MATRICULAS ADD CONSTRAINT FK_ID_MATERIAS_ABIERTA_M
	FOREIGN KEY(ID_MATERIA_ABIERTA) REFERENCES MATERIAS_DISPONIBLES(ID_MATERIA_ABIERTA)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE MATRICULAS A REGISTRO_NOTAS
ALTER TABLE REGISTRO_NOTAS ADD CONSTRAINT FK_ID_COMPROBANTE_RN
	FOREIGN KEY(ID_COMPROBANTE) REFERENCES MATRICULAS(ID_COMPROBANTE)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION

--DE MATERIAS A REGISTRO_NOTAS
ALTER TABLE REGISTRO_NOTAS ADD CONSTRAINT FK_ID_MATERIA_RN
	 FOREIGN KEY(ID_MATERIA) REFERENCES MATERIAS(ID_MATERIA)
	 ON DELETE NO ACTION
	 ON UPDATE NO ACTION